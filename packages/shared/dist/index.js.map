{"version":3,"sources":["../src/index.ts","../src/constraint/language.ts","../src/parser.ts"],"sourcesContent":["export * from './constraint/language'\nexport * from './parser'\n","export const LANGUAGE_ID = 'beancount'\n\nconst Tuple = <T extends unknown[]>(arr: readonly [...T]): T => arr as T\n\nexport const TOKEN_TYPES = Tuple([\n    \"keyword\",\n    \"comment\",\n    \"string\",\n    \"number\",\n    \"operator\",\n    \"enum\",\n    \"account\",\n    \"date\",\n    \"currency\",\n    \"tag\",\n    \"link\"\n] as const);\n\nexport const tokenTypeToIndex = (tokenType: TokenTypes): number => {\n    return TOKEN_TYPES.findIndex(item => item === tokenType);\n}\n\n\nexport const TOKEN_MODIFIERS = Tuple([\"default\", \"definition\", \"deprecated\", \"documentation\", \"declaration\"] as const)\n\nexport type TokenTypes = (typeof TOKEN_TYPES)[number]","import Parser from \"web-tree-sitter\";\nimport BeancountLang from 'tree-sitter-beancount/tree-sitter-beancount.wasm'\n\nlet parser: Parser;\nexport const getParser = async () => {\n    if (parser) return parser;\n    await Parser.init({\n        locateFile(scriptName: string) {\n            return require.resolve(`web-tree-sitter/${scriptName}`)\n        }\n    })\n    parser = new Parser();\n    const Beancount = await Parser.Language.load(\n        BeancountLang\n    );\n    parser.setLanguage(Beancount);\n    return parser;\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,cAAc;AAE3B,IAAM,QAAQ,CAAsB,QAA4B;AAEzD,IAAM,cAAc,MAAM;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAU;AAEH,IAAM,mBAAmB,CAAC,cAAkC;AAC/D,SAAO,YAAY,UAAU,UAAQ,SAAS,SAAS;AAC3D;AAGO,IAAM,kBAAkB,MAAM,CAAC,WAAW,cAAc,cAAc,iBAAiB,aAAa,CAAU;;;ACvBrH,6BAAmB;;;;;;;;;;AAGnB,IAAI;AACG,IAAM,YAAY,YAAY;AACjC,MAAI;AAAQ,WAAO;AACnB,QAAM,uBAAAA,QAAO,KAAK;AAAA,IACd,WAAW,YAAoB;AAC3B,aAAO,QAAQ,QAAQ,mBAAmB,UAAU,EAAE;AAAA,IAC1D;AAAA,EACJ,CAAC;AACD,WAAS,IAAI,uBAAAA,QAAO;AACpB,QAAM,YAAY,MAAM,uBAAAA,QAAO,SAAS;AAAA,IACpC;AAAA,EACJ;AACA,SAAO,YAAY,SAAS;AAC5B,SAAO;AAEX;","names":["Parser"]}